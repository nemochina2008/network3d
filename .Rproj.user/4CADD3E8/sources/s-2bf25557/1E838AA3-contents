(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// build custom shader material for nodes to avoid using sprites.
module.exports = function makeNodeMaterial(constants){
  // --------------------------------------------------------------
  // Set up custom shaders/materials
  // --------------------------------------------------------------
  const node_vertex_shader= `
attribute float size;
varying vec3 vColor;
void main() {
vColor = color;
vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
gl_PointSize = size * ( 300.0 / -mvPosition.z );
gl_Position = projectionMatrix * mvPosition;
}`;

  const outline_fill = constants.node_outline_black ? 0.0: 1.0;
  const node_fragment_shader = `
varying vec3 vColor;
void main() {
float pct = distance(gl_PointCoord,vec2(0.5));
gl_FragColor = vec4(pct > 0.4 ? vec3(${outline_fill}): vColor, pct < 0.5 ? 1.0: 0.0);
}`;

  return  new THREE.ShaderMaterial( {
    vertexShader: node_vertex_shader,
    fragmentShader: node_fragment_shader,
    depthTest: false,
    transparent: true,
    vertexColors: true
  } );
};

},{}],2:[function(require,module,exports){
const testing = require('./testing.js');
const makeNodeMaterial = require('./MakeNodeMaterial.js');

HTMLWidgets.widget({

  name: 'network3d',

  type: 'output',

  factory: function(el, width, height) {
    testing('Nick');

    return {

      renderValue: function(x) {

        const data = {
          edges: HTMLWidgets.dataframeToD3(x.data.edges),
          vertices: HTMLWidgets.dataframeToD3(x.data.vertices),
        };

        console.log('rendering!');

      },

      resize: function(width, height) {
        //plot.resize(width, height);
      }

    };
  }
});

},{"./MakeNodeMaterial.js":1,"./testing.js":3}],3:[function(require,module,exports){
module.exports = function(message){
  console.log('here is your message' + message);
};

},{}]},{},[2]);
